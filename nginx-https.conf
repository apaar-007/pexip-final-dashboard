# HTTP server block for Certbot challenges and redirection
server {
    listen 80;
    listen [::]:80; # Listen for IPv6 as well
    server_name control.example.com; # Your domain name

    # This block is crucial for Certbot's HTTP-01 challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot; # This path will be mapped to a shared volume
    }

    # Redirect all HTTP traffic to HTTPS after certificates are obtained
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2; # Listen for IPv6 as well
    server_name control.example.com; # Your domain name

    # Paths to your Let's Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/control.pextest.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/control.pextest.com/privkey.pem;

    # Recommended SSL/TLS settings for security and performance
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for perfect forward secrecy
    # Generate this file on your host machine: openssl dhparam -out /path/to/ssl-dhparams.pem 2048
    # Then ensure it's mapped into the container, or place it in a volume.
    # For simplicity, we'll assume it's directly copied or mounted for now.
    # A common location in Docker setups is to put it with your other SSL files.
    # We will mount it via a volume in docker-compose.
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; # Google DNS resolvers
    resolver_timeout 5s;

    # Enable modern TLS protocols
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # HSTS (Strict-Transport-Security) to force clients to use HTTPS for a year
    # remove the 'includeSubDomains' if you don't want it to apply to subdomains
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Web application root
    root /usr/share/nginx/html;
    index index.html;
    try_files $uri $uri/ /index.html;

    # Your existing API reverse proxy block
    location /api/ {
        # replace with your Pexip Infinity conference node FQDN
        proxy_pass http://10.38.19.110;
        proxy_set_header Host 10.38.19.110;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        proxy_redirect off;

        proxy_ssl_verify off;
    }
}